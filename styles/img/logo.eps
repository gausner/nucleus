%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (No name) ()
%%Title: (Money_6.eps)
%%CreationDate: 11/4/2015 1:54 PM
%%Canvassize: 16383
%%BoundingBox: 187 261 764 638
%%HiResBoundingBox: 187.5 261 764 637.5
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 450.5 449.5 450.5 449.5
%AI3_TileBox: 152.3999 29.1299 747.4199 870.9902
%AI3_DocumentPreview: Header
%AI5_ArtSize: 900 900
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -82.3828 1066.3789 0.6667 799 875 26 0 0 35 113 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 14.1732 5 14.1732 5 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MC
%AI7_Thumbnail: 128 84 8
%%BeginData: 16698 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD18FFAF1437143736371437363714373637143D3637143D363784
%FD26FFAF3B3BAEFD3EFF8437143614371436143714361437143614371436
%14371485FD24FFA884123A125FFD3EFF8514373637143736371437363714
%37363714373637143784FD23FF843B123B3A3B128AFD3DFF841414371436
%143714361437143614361436143714360E85FD21FFAE343A123B1212123A
%12FD3DFF851437143714371437143D3637143D363714371437141584FD1F
%FFAF60183B3A3B123B3A3B3A3B5FFD3CFFA8615A615A615A6114360E3614
%360E3636615A615A6136AFFD1EFF5F3B123B1235123B123B1212123BA8FD
%42FFA8360D360D360D360DA9FD23FFAE3B3B183B3A3B123B3A3B3A3B123B
%1260FD42FFAF0D360E360D360E1484FD21FF843B123B123B123B123B123B
%123B123B123B12AEFD41FFA93614361436363614AFFD20FF5F3B183B123B
%3A3B3A3B3A3B3A3B3A3B3B3B123B3BFD41FFAF0E360E360E360E3684FD1E
%FF84123B183B1235123B123B183B123B183B123B1212123B83FD40FFAF36
%14361436143614AFFD1CFF845F183B123B123B3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B123B183BAFFD3CFFA98560611437143714371437368584AFAFFD16
%FFAF3B18123B1212123B123B123B123B123B1212123B123B123B123B1260
%FD39FF8585373D153D153D373D373D373D373D153D373D618BAFFD11FFAF
%8A183B3A3B123B3A3B3A3B3A3B3A3B3A3B1213123B3B3B3A3B3B3B123B18
%AFFD35FF8561141514371437143714371437143714371437143714151437
%3685A9FD0DFF833B123B1212123B3A3B123B183B123B12120CFD04123B18
%3B123B1812123B3BFD33FF8B3737143D373D143D373D143D373D143D373D
%143D373D143D373D143D153D61FD0AFFAE3B3B3A3B123B123B3A3B3A3B3A
%3B3A3B121312131235123B3A3B3A3B3A3B12353A3B84FD30FF8537143714
%371437143714371437143714371437143714371437143714371437141514
%85FD06FFA85F123A123B1234123B123B123B123B123B12120C1212120C12
%123B123B123B123B123A123BAFFD2DFFAF3D37153D373D373D373D373D37
%3D363D3637143D3637143D373D373D373D373D373D373D153D85FFFFFF5F
%3B183B123B123B3A3B3A3B3A3B3A3B3A3B12131213121312131213123B3B
%3B3A3B3B3B123B188AFD2CFF851437143714371437143D1437143614360E
%360E360E360E360E36143614371437143714371437141560841212123B12
%12123B183B123B183B123B183BFD05123B1234FD04120C3B3A3B123B3A12
%123B12AFFD29FFAF611537143D373D143D3737143614360E3614140E3614
%360E360E360E3614361437363D153D373D143D3737143B1234123B3A3B3A
%3B3A3B3A3B3A3B3A3B3A3B123B3A3B3A3B3A3B12351212123B3A3B3A3B3A
%35123B5FFD11FFAEFD16FF8537143714371437143714360E360D140E3636
%605A85848584855A855A360E140E140D361437143714371437143714130B
%34123B123B123B123B123B123B123B123B123B123B123B123B12120C1212
%3B123B123B1212123B84FD0BFFAFAE595F121284FD14FF853D153D373D37
%3D373D143614360E375AA9AFFD0DFF8585363614361437363D373D373D37
%3D373B3B5F3A3B3B3B183B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A
%1312353A3B3A3B3A3B123B185FFD08FFA88A5F35121212130C84FD13FF84
%3714371437143714370E360E363685A9FD13FF845A0E140E361437143714
%3714371535345F5F8A848A123B123B183B123B183B123B183B123B183B12
%3B12120C3B3A3B123B3A3B123B128AFD04FF846034120C1212120C121212
%34FD12FF8537143D373D143D36361436145A84FD0BFFA8FD0CFFAF5A140E
%363637153D373D143D373B123A345F84AF3B3B3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B3A3B3A3B1212123B3A3B3A3B3A3B123B3BAE5F3B12120C13FD0612
%0C121213A8FD10FF843714371437143714360E140E85FD06FFA8FFA8FFA8
%FFA8A8A8FFA8FFA8FFA8FFA8FD05FF84360D360E36143714371437143534
%3B12185FAE123B123B123B123B123B123B123B123B123B12120C12123B12
%3B123BFD04120C120C1212120C120C120C1212120C120C84FD0FFFAF3D15
%3D373D373D1436141436FD07FFA9FFFFFFA9FFFFFFA8FFFFFFAFFFFFFFA9
%FD08FF6114361437373D373D373D36603B5F3B19848A183B3A3B3A3B3A3B
%3A3B3A3B3A3B3A3B3A3B1213123B3A3B123B121312351213123512131235
%1213123512131235121259FD0FFF3D14371437143D14360E145AFD05FFA8
%FFA8FFA8FD07FFA8FFFFFFA9FFA8FFA8FFA8FFA8FD04FF850E140E361437
%14371437363B345F3B8A8318123B183B123B183B123B183B123B183BFD05
%121312120C1212120C120C120C1212120C1212120C1212120C121235FD0E
%FF85153D143D373D1436143684FD05FFA8A8A8FD09FFAFFD09FFA8FFA8A9
%AFFD04FFAF14361437373D143D3737363B1284843B3A3B3A3B3A3B3A3B3A
%3B3A3B3A3B3A3B343512131212121312120CFD0412131213121312131213
%1213121312120C1312AFFD0CFFAF14371437143714360D1484FFFFFFA9FF
%A8FFA8FD0BFFA8FD09FFA8A8A8FFA8FD04FFAF0E140D3614371437143735
%341218123B123B123B123B123B183B123B12120C120C120C120C120C120C
%120C1212120C1212120C1212120C1212120C1212120C125FFD0CFF373D37
%3D373D3736143685FD05FFA9FD1BFFA9FD06FFAF14363637373D373D153D
%3A3A345F3B3B183B3B3B3A3B3A3B12351213123512131235121212351213
%12351213123512131235121312351213123512131235125FFD0BFF851514
%37143714360E145AFFFFFFA8FFA8FFA8FD1BFFA8FFA8FD04FF850E361437
%14371437143C3A3B5FAE845F123BFD06120C1212120C120C120CFD07120C
%1212120CFD05120C120C120C120C1212120C1212FD0AFFAF3D153D143D37
%3714365AFD05FFA8FD11FFA8FD0DFFA8FD06FF850E36363D143D373D143B
%343A3A605F3512131213121312120CFD0412131213121312131213121312
%131213121312120C120C120C121213121312121213A8FD09FF8514371437
%14370E140EFFFFFFA8FFA8FFA8FD0FFF537EFD0EFFA8FFA8FD04FF360D36
%143714371437133412120C120C120C120C120C120C120C3B12120C121212
%0C1212120C1212120C120C0C0B120B0C0B120C120C1212120C120C120B84
%FD09FF373D373D373D36360EAFFD16FF7D527EFD11FFA9FFFFFFA9361436
%373D373D373D1213123512120C34121212351213123B123B123512131235
%121312351213123512120C340C120C340C121235121312351212121335FD
%08FF85151437143714360E5AFD04FFA8FD11FFA85228A8FD10FFA8FFA8FF
%FFFF5A140E361437143715350B0C0C120C120C1212120CFD041213121212
%3B12120C1212120CFD05120C0C0C120C0C0B120C120C1212120C1212120C
%13A8FD07FF61153D143D37361436A9FFFFFFA8FD12FFA82E527DFD13FFA8
%FFFFFF1436363D143D373D14120C1212131213121312131213123B121312
%12123B1213121312131213121312131213121312120C120C121213121312
%13121212AEFD06FFAF1437143714370E1436FFFFFFA8A8A8FD11FF7E5228
%84FD11FFA9A8A8A8FFFF600D361437143714370C120C120C1212120CFD04
%123B0C120C1212120C1212120C1212120C1212120C1212120C1212120B12
%0B120C1212120C120C1259FD06FF853D373D373D36360EAFFD17FFA85253
%7EFD17FFA9361437373D373D37360C121235121312351213123B12131235
%123B123B123B1213121312351213123512131235121312350C120C351213
%12351212123BFD06FF611437143714360E36A9FFFFFFA8FD13FF7E532E84
%FD12FFA9FFA8FFFFFF363614371437143714120CFD05120CFD06123BFD07
%123AFD04120C1212120C1212120CFD05120C0C0C13FD04120C120CAFFD05
%FF3737143D3737143660FD18FFA82E537EFD18FF850E36363D143D37370C
%120C121213121312131213123B123B0C3B1235123B341312131213121312
%13121312131213121312120C1212131213FD041284FD04FF843714371437
%14360DA9FFFFA8FFA8FD13FF845228A8FD14FFA8FFFFFFA8360D36143714
%3714130B120C120C1212120C3BFD0712350C1212120C120C1212120C1212
%120C1212120C1212120B120C120C1212120C120C5FFD04FF8B153D373D37
%371437FD19FFA82E5384FD15FFA9FFFFFF3636363D373D373D0D120C1212
%35121312351235123B123B12351213123512131235121312351213123512
%131235121312340C12123512131235121312FD04FF603714371437141436
%FFFFFFA8FD15FF845228A8FD14FFA8FFA8FFFF600D361437143715130B12
%0C120C1212120C351212123B12120C3B12120C1212120C1212120C121212
%0C1212120C1212120C120CFD05120C12121284FFFFFF61143D373D143614
%61FD04FFA8FD14FFA82E527DFD19FF84141437373D143D14120C12121312
%131213123B1212123B1212123B123B121312131213121312131213121312
%13121312120C121213121312130C131284FFFFFF3637143714370D1460FF
%FFFFA8FFA8FD13FF7E522884FD14FFA8FFA8FFFFA90E361437143714360C
%0C0B1212120CFD04123B12120C1212120CFD05120C120C1212120C121212
%0C1212120C120B0C0C1212120C1212120C1235FFFFFF3D153D373D143614
%A9FD19FFA852537EFD19FFA9361437373D373D37120C3412131235121312
%13123B123B1213123B1213123B3A3512351213123512131235121312350C
%120C3512131235121312351235AFFFFF1437143715360E3684FFFFFFA8FD
%15FF7E532E7DA8A9A8A8A8A9A8A8FD0CFFA8FFA8FFFFAF1436143D143714
%370C0C0B1212120C1212120CFD04123B1212123B12120C1312120C121212
%0C1212120C1212120C120C120C120CFD05120C1212A8FFFF3D373D143D36
%3614AFFFFFA8FFA8FFA8FD12FFA82E5352532E5352532E532E84FD0CFFA8
%FFFFFFA9361437153D373D14350C12121312131213121312131212123B12
%35121312350C3B1212121312131213121312130C120C120C120C12121312
%13FD04125FFFFF1437143714370E3684FFFFFD06A8FD11FF7E2E2852282E
%2852282E2852287DFD08FFA8FFA8A8A8FFFFAF0E36143714371437123412
%3A123B123A123B123A123B123A123B123B123B123A123B123A123B123A12
%3B1234123A1234123B123412120C120C120C120C35FFFF3D373D373D3636
%14AFFD1AFF7D7E7D847D847D847D847D847DFD0FFFA9361437373D373D36
%3B343B3A3B3B3B3A3B3B3B3A3B3B3B3A3B3B3B3A3B3B3B3A3B3B3B3A3B3B
%3B3A3B3B3B3A3B3B3B3A3B3B3B3A3B34120C3412130C1312FFFF14371437
%14370E1484FFFFFFA8FD2DFFA9FFA8FFFFAF0E361437143714370C341234
%123B1234123B1212123B1234123B1234123B1234123B1234123B1234123B
%123B123B1234123B123B123B0C0C0C1212120C1284FF3D143D373D143614
%85FD04FFA8FD31FFA9360E37373D143D36341235123B123B123B123B123B
%123B123B123B123B123B123B123B123B123B123B3A3B3A3B123B123B123B
%123B12120C12121312120C60FF3637143714370D145AFFFFFFA8FFA8FD2B
%FFA8FFA8FFFF850E361437143714361234123B123B123B123B83AE5F3A12
%3B123B123B123B123B123B123B123B123B123B123B123B123B123B123518
%3A0B120C120C120C1212FF61153D373D36361461FD04FFA9FD31FF603614
%3D373D373D363A123B3B3B3A3B3A195F8A3BAF3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B123B12340C0C0C35121312
%13AF6115143714370E3636FFFFFFA8FFA8FD2BFFA8FD04FF5A0E36143D14
%3715361234123B183B123B5FAE3B3B84AE3B3B183B123B183B123B183B12
%3B183B123B183B123B183B123B183B123B3A3B0B0C0C120C12121259FFAF
%153D143D37370E36A9FD31FFA8FFFFFF1436363D143D373D133A343B3A3B
%183B848A3B3B183B5FAF5F3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B
%3A3B3A3B3A3B3A3B123B34120B12125F5FAFFFFFFFA8371437143714360D
%85FFFFA8FFA8FD29FFA8FFA8FFFFFF84140D361437143714351234123B12
%3B845F123B123B121812AE5F3B123B123B123B123B121212351212123512
%12123B123B123B1212123B0C5983FD08FF373D373D373D143636FD34FF61
%0E36363D373D373D123B343B3A3B848A125FAE6018AF843B3AAF3B3B3A3B
%3A3B3A3B3B3B12131213121312131213123B3A3B3B3B123B3BFD0BFF8514
%37143714360E36A8FFFFFFA8FFA8FD27FFA8FFA8FFFFFF14360E37143714
%371334123B183B12AE3A3B84AE5F3A83AE5F185F8A123B123B183B123B12
%120C1212120C1212120C3B3A3B123B1212123BFD0BFFA93D373D143D3636
%0E85FD04FFA8A9FD26FFA8A9A8FFFFFF84361437153D373D153B3434123B
%3A5F843B5F8A5F8A3A8A3BAE3A5F843B3A3B3A3B3A3B3A3B123B12351212
%1213123B183B3A3B3A3B123B3AFD0CFF3637143714370E360EAFFFFFA8A8
%A8FD25FFA8FFA8A8FFFFFF360D361437143714361234123B123B5F841284
%3B5F5F3B843B843B3B8A123B123B123B123B123B183B123B12120C13183B
%123B123B1235123BA8FD0BFF8B153D373D3737143660FD05FFA9FD2AFF85
%0E36363D373D373D133A343B3A3B3A5F843B5F8A5F8A3A8A3A66AEAF5F3B
%3A3B3A3B3A3B3A3B3A3B3A3B3B3B1235123B3A3B3A3B3A3B123B3BFD0CFF
%A9371437143D14360E36A9FFFFFFA8FFA8FD23FFA8FFAFFFFFFF36140E37
%1437143714351234123B123B188A3A3B84AE5F3B843B123B3A3B123B183B
%123B183B123B183B123B3A3B0C12123B123B183B123B183BAEFD0CFF613D
%373D143D36360E61FD06FFA9FD23FFA9FFFFFF5A361437153D373D153C34
%34123B3A3B3A3B5F8A123B8A5F12AF5F3B123B3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B3A3B3A351213123B3A3B3A3B123B3BFD0DFFAF1437143714371436
%0D85FD04FFA8FFA8FD1FFFA8FFA8FFFFFF84140D36143714371437123412
%3B123B123B123B84841218123B3A8A845F123B123B123B123B123B123B12
%3B123B123B12120C35183B123B1212123BAFFD0DFF85153D373D373D1436
%14AFFD04FFA9FD1FFFA9FD05FFAF361436363D373D373D143A343B3A3B3A
%3B3A3B3A3B84AF5F3B3A3B183B848A183B3A3B3A3B3A3B3A3B3A3B3A3B3A
%3B3B3B1213123B3A3B3B3B123B3BFD0EFFA93D1437143714360E3614AFFD
%04FFA8FFA8FD19FFAFFFA8FFA8FFFFFFA9360E36143D1437143714341234
%123B123B183B123B123A3BAF5F3A5F8A1218848A123B123B183B123B183B
%123B183B123B12120C353A3B123B1212123BFD0FFF8537373D143D373714
%3636FD05FFA8FFFFFFAFFD15FFA8FFA8FD06FF5A0E36363D143D373D153C
%3434123B3A3B3A3B3A3B183B3A185F8A18AE84AE183B845F3A3B3A3B3A3B
%3A3B3A3B3A3B3A3B3A3B1212123B3A3B3A3B123B3AFD10FF361514371437
%14360D1436AFFD04FFA8FFA8FFA8FD09FFA8FD09FFA8A8A8FFA8FFFFFFA8
%5A0E360E371437143715361234123B123B123B123B123A123B12845F3B84
%3B5F8A12845F3A123B123B123B123B123B123B123B12120C34123B123B12
%35123BA8FD10FF373D373D373D3737363636AFFD04FFA8FD15FFA9FFA9AF
%FD04FFAF611436143D373D373D373D123A343B3A3B3A3B3A3B3A8A84663A
%3B5F8A3A8A3B3B8A3B3BAE3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A35121312
%3B3A3B3A3B123B3BFD11FFAF14371437143714360E140E85FD06FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD05FF84360E361437143714
%37143D1334123B183B123B183B125F843B843B12845F3B843B128A3B3B84
%3B123B123B183B123B183B123B3A120C12123B123B183B123B183BAEFD11
%FF85153D143D373D143714360E61AFFD05FFAFFFFFFFA8FFFFFFA8AFFFFF
%A8FFFFFFA8FD07FF5A361436143D373D143D373D133A343B3A3B3A3B3A3B
%3A3B5F8A128A3B3B5F6018AE3B3B845F3B8A3A3B3A3B3A3B3A3B3A3B3A3B
%3A3B1212123B3A3B3A3B3A3B123B3BFD13FF6114371437143714360E360D
%365AFD05FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFAFFD06FF8514140D361437
%1437143714371312123A123B123B123B123B125F83185F8412845F3A833B
%12AE123B843A123B123B123B123B123B12120C121234123B123B123B1212
%123BAFFD13FF61153D373D373D3737143614363685AFFD15FF8461143614
%37363D373D373D373D14120C351235123B3A3B3A3B3A3B3AAF3B3BAE3B5F
%8A18AE3A8A843B848A183B3A3B3A3B3B3B1235121312351213123B3A3B3A
%3B3B3B123B3BFD15FF61143714371437143714360E140E365AA9A9FD0FFF
%848536140E360E36143D14371437153713120B120CFD04123B183B123B18
%185F8A125F84AF5F3A84AE843A12AF3A3B123B183B123B12120C1212120C
%1212120C353A3B123B1212123BFD16FF85143D373D143D373D143714360E
%361436368585AFA9FD05FFA9A9846136360E361436143D373D143D373D15
%3D13120C1212131213123B3A3B3A3B3A3B3A3BA866125F845F188A5F3B18
%AE5F3B3A3B3A3B3A3B3A3B12131235121312351213123B3A3B3A3B123B3A
%FD17FF851437143714371437143714360D360E140D140E360E3614360E36
%0E140D360E360E36143714371437143715371234123A123B123B123B123B
%123B123B123B123B84841218123B121834AE5F3A123B123B123B123B123B
%123B123B123B123B123B123B123B1235123BA8FD17FFAF3737153D373D37
%3D373D373D363614361436143614361436143614363637143D373D373D37
%3D373D373D123A343B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B183B84AF5F
%3B3A5F84AF5F3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B123B3BFD1AFF61371437143714371437143D143714371436143614
%361437143714371437143714371437143714361234123B183B123B183B12
%3B183B123B183B123B183B123B3AAE5F188460123B183B123B183B123B18
%3B123B183B123B183B123B183B123B183B123B183BAEFD1AFFAF61143D37
%3D143D373D143D373D153D373D143D373D153D373D143D373D143D373D15
%3D3635123B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B5F
%AE84AE183B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A3B3A
%3B3A3B123B3BFD1DFFA93637143714371437143714371437143714371437
%1437143714371437143714361234123A123B123B123B123B123B123B123B
%123B123B123B123B123B123B3B84123B123B123B123B123B123B123B123B
%123B123B123B123B123B123B123B1212123BAFFD1EFFA961373D153D153D
%373D373D373D373D373D373D373D373D373D153D36350C34123B123B3A3B
%123B3A3B123B123B123B123B123B123B123B123B123B123B123B123B123B
%123B123B123B123B123B123B123B123B3B3B123B343B123B123B123B3BFD
%22FF8561373714371437143D1437143D1437143D1415143D37855F3A123B
%123B123B123B183B123B183B123B123B123B123B123B123B123B123B123B
%123B123B123B123B123B123B123B123B123B123B123B123B183B123B123B
%123B183B123BFD0FFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFFFFFA8
%AF846136371437143714371437143714616085A8FFFFAE123B123B123B12
%3B123B123B123B123B123B123B123B123B123B123B123B123B123B123B12
%3B123B123B123B123B123B123B123B123B123B123B123B123B123B123B12
%3A35FFFFFFA8FFAFFFA8FFAFFD05FF7E597D7D7D597D7D7D597D7D7D597D
%7D7D59FD047D7E7D7D597D597D597D597D597D597D7D7EFD067D597D597D
%597D597D597D597D597D597D597D597D597D597D597D597D597D597D597D
%597D597D597D597D597D597D597D597D597D597D597D597D597D597D597D
%597D59FD057D597D7D7D597E
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
4 Bn
%AI5_BeginGradient: (Black and White Linear)
(Black and White Linear) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Black and White Radial)
(Black and White Radial) 1 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F10111213141516171818191A1B1C1C1D1F20212223
24252627292A2A2B2D2E2F30323334353637383A3B3C3D3E3F40424344454647484A4B4C4D4E4F51
52535455555658595B5C5D5F6061626364666768696A6B6C6D6E6F6F707172737475767778797A7B
7C7D7E7F808081828383848586878788898A8B8C8B8C8D8E8E8F9090919293949495969697989899
9A9A9B9C9C9D9D9E9E9F9FA0A0A1A1A2A2A3A3A4A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABAAAAAB
ABABABACACACACADADADADAEAEAEAFAFAFB0B0B0B1B1B1B2B2
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141516171818191A1B1C
1D1D1E1F202122222324262728292A2B2C2D2E2E2F30313233343536373838393A3B3C3D3E3F4041
434445464748494A4C4D4E4F505152535455565758595A5A5B5C5D5E5F6061626364646566676869
6A6B6C6C6D6E6F6F70717272737475767778797A7B7C7C7D7E7F808081828383848586878788898A
8A8B8C8D8E8E8F8F9090919292939494959696979899999A9A9B9B9C9C9D9D9E9E9F9FA0A0A2A2A3
A3A3A4A4A5A5A6A6A7A7A7A8A8A9A9A9AAAAAAABABABACACAC
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141515161718191A1B1B1C
1D1E1F20202122232425262728292A2B2C2D2E2F30313233343536373738393A3B3C3D3E3F404142
434445464748494A4C4D4E4F505152535455565758595A5B5C5C5D5E5F6061616161626364656566
676869696A6B6B6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F7F808181828383
8485858686878888898A8B8B8C8D8D8E8E8F8F90909191929293939494959596969797989899999A
9A9B9B9C9C9C9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A2A3A3
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000010101010101020202020203030304040505060606070708090A0A0B
0C0D0E0F0F101112131415161718191A1B1D1E1F20212324252728292B2C2E2F303233353637393B
3C3E4041434546484A4B4D4F51525456585A5C5E5F61636567696B6D6F717375777A7C7E80828587
898B8E90929497999B9DA0A2A4A6A8ABADAFB1B3B5B7B9BBBD
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1
B0AFAEADADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A
898887868584838281807F7E7D7C7B7A79787776767574737271706F6E6D6C6B6A69686766656463
6261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3E3D3C
3B3A393837363534333231302F2E2D2C2B2A29282726252423
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796959493929190908F8E8D8C8B8A89
8887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261
605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
3837363534333231302F2E2D2C2B2A29282726252423222120
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 51.0204 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 51.0204 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Fade To Edge)
(Fade To Edge) 0 3 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 50 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 56.0729 57.4443 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 56.0729 57.4443 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 31.8603 79.7713 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 31.8603 79.7713 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Crosses Pattern)
(Crosses Pattern) 8.3721 8.3701 63.3369 63.3369 [
%AI3_Tile
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
8.3721 8.3711 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117433 0.540124 0.838071 0.007507 0.858824 0.529412 0.266667 Xa
 0.117433 0.540124 0.838071 0.007507 0.858824 0.529412 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
24.8623 2.875 m
24.8623 13.8672 L
13.8682 13.8672 L
13.8682 24.8604 L
2.875 24.8604 L
2.875 2.875 L
24.8623 2.875 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
30.3574 19.3643 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 Xa
 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
35.8535 24.8604 m
46.8486 24.8604 L
46.8486 13.8672 L
35.8535 13.8672 L
35.8535 2.875 L
24.8623 2.875 L
24.8623 13.8672 L
13.8682 13.8672 L
13.8682 24.8604 L
24.8623 24.8604 L
24.8623 35.8535 L
35.8535 35.8535 L
35.8535 24.8604 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
19.3643 41.3496 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117433 0.540124 0.838071 0.007507 0.858824 0.529412 0.266667 Xa
 0.117433 0.540124 0.838071 0.007507 0.858824 0.529412 0.266667 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
24.8623 46.8477 m
35.8535 46.8477 L
35.8535 35.8535 L
24.8623 35.8535 L
24.8623 24.8604 L
13.8682 24.8604 L
13.8682 35.8535 L
2.875 35.8535 L
2.875 46.8477 L
13.8682 46.8477 L
13.8682 57.8398 L
24.8623 57.8398 L
24.8623 46.8477 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
8.3721 63.3369 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.117617 0.62887 0.731136 0.007935 0.85098 0.470588 0.321569 Xa
 0.117617 0.62887 0.731136 0.007935 0.85098 0.470588 0.321569 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
2.875 68.834 m
24.8613 68.834 L
24.8613 57.8398 L
13.8672 57.8398 L
13.8672 46.8477 L
2.875 46.8477 L
2.875 68.834 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
52.3447 30.3574 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.668879 0.079896 1 0.002411 0.384314 0.682353 0.27451 Xa
 0.668879 0.079896 1 0.002411 0.384314 0.682353 0.27451 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
57.8408 35.8535 m
68.833 35.8535 L
68.833 24.8604 L
57.8408 24.8604 L
57.8408 13.8682 L
46.8486 13.8682 L
46.8486 24.8604 L
35.8535 24.8604 L
35.8535 35.8535 L
46.8486 35.8535 L
46.8486 46.8477 L
57.8408 46.8477 L
57.8408 35.8535 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
63.3369 8.3711 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25922 0.881651 0.570886 0.107759 0.67451 0.239216 0.32549 Xa
 0.25922 0.881651 0.570886 0.107759 0.67451 0.239216 0.32549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
68.833 24.8604 m
57.8408 24.8604 L
57.8408 13.8682 L
46.8486 13.8682 L
46.8486 2.875 L
68.833 2.875 L
68.833 24.8604 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
41.3496 52.3428 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.118868 0.676478 0.78442 0.010986 0.843137 0.435294 0.282353 Xa
 0.118868 0.676478 0.78442 0.010986 0.843137 0.435294 0.282353 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
46.8486 57.8398 m
57.8408 57.8398 L
57.8408 46.8477 L
46.8486 46.8477 L
46.8486 35.8535 L
35.8535 35.8535 L
35.8535 46.8477 L
24.8613 46.8477 L
24.8613 57.8398 L
35.8535 57.8398 L
35.8535 68.834 L
46.8486 68.834 L
46.8486 57.8398 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
 0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
63.3369 63.3369 m
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.668879 0.079896 1 0.002411 0.384314 0.682353 0.27451 Xa
 0.668879 0.079896 1 0.002411 0.384314 0.682353 0.27451 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
68.833 46.8477 m
57.8408 46.8477 L
57.8408 57.8398 L
46.8486 57.8398 L
46.8486 68.834 L
68.833 68.834 L
68.833 46.8477 L
s
%AI6_EndPatternLayer
) &
(0 O 0 R 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 Xa
 0.549676 0.059907 0.821439 0.000031 0.498039 0.72549 0.376471 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
2.875 35.8535 m
13.8682 35.8535 L
13.8682 24.8604 L
2.875 24.8604 L
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.094881 0.507897 0.570062 0.001526 0.882353 0.564706 0.439216 Xa
 0.094881 0.507897 0.570062 0.001526 0.882353 0.564706 0.439216 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
35.8535 68.834 m
35.8535 57.8398 L
24.8613 57.8398 L
24.8613 68.834 L
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.523186 0.892546 0.074769 0.002777 0.54902 0.25098 0.556863 Xa
 0.523186 0.892546 0.074769 0.002777 0.54902 0.25098 0.556863 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
68.833 35.8535 m
57.8408 35.8535 L
57.8408 46.8477 L
68.833 46.8477 L
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.25922 0.881651 0.570886 0.107759 0.67451 0.239216 0.32549 Xa
 0.25922 0.881651 0.570886 0.107759 0.67451 0.239216 0.32549 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 5.75 w 4 M []0 d0 XR
35.8535 2.875 m
35.8535 13.8672 L
46.8486 13.8672 L
46.8486 2.875 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 11)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3867.1992 4766.999 m
-3776.5903 4766.999 L
-3776.5903 4755.1182 L
-3867.1992 4755.1182 L
-3867.1992 4766.999 L
n
u
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3784.0437 4759.7305 m
-3784.3442 4759.7168 -3784.6472 4759.6992 -3784.9497 4759.6816 C
-3784.7976 4759.75 -3784.6472 4759.8564 -3784.4929 4760.0249 C
-3784.2952 4760.1353 -3784.1919 4759.9209 -3784.0437 4759.7305 C
f
/BBAccumRotation (0.598766) XT
-3785.7876 4759.6309 m
-3785.8423 4759.6274 -3785.8972 4759.623 -3785.9482 4759.6206 C
-3785.9968 4759.6484 -3786.0437 4759.6772 -3786.0857 4759.707 C
-3785.9868 4759.6772 -3785.8865 4759.6519 -3785.7876 4759.6309 C
f
/BBAccumRotation (0.598766) XT
-3787.3643 4759.8765 m
-3787.0857 4759.9302 -3786.8188 4759.8975 -3786.5613 4759.8369 C
-3786.7888 4759.7646 -3787.0532 4759.7622 -3787.3643 4759.8765 C
f
/BBAccumRotation (0.598766) XT
-3786.1079 4760.1104 m
-3786.2048 4759.9678 -3786.2524 4759.8184 -3786.0923 4759.71 c
-3786.0903 4759.709 -3786.0884 4759.709 -3786.0857 4759.707 C
-3786.2429 4759.7524 -3786.3987 4759.7998 -3786.5613 4759.8369 C
-3786.3911 4759.8926 -3786.2388 4759.9878 -3786.1079 4760.1104 C
f
/BBAccumRotation (0.598766) XT
-3786.1079 4760.1104 m
-3786.0144 4760.248 -3785.8655 4760.3774 -3785.8147 4760.457 c
-3785.8999 4760.3301 -3785.9983 4760.2129 -3786.1079 4760.1104 C
f
/BBAccumRotation (0.598766) XT
-3786.5056 4763.5024 m
-3786.6648 4763.6094 -3786.6272 4762.6494 -3786.9419 4762.8638 C
-3787.6799 4763.1333 -3788.3113 4763.5645 -3789.0024 4763.5664 C
-3789.3169 4763.7822 -3789.8132 4762.7168 -3790.1272 4762.9316 C
-3790.8677 4763.2017 -3792.7563 4764.4917 -3791.6433 4764.4336 c
-3789.9692 4764.291 -3788.8777 4764.0313 -3787.3755 4763.8545 C
-3786.1548 4763.4688 -3784.9812 4763.0103 -3783.7312 4762.6621 C
-3783.3811 4762.6167 -3783.0544 4762.6909 -3782.7251 4762.7559 C
-3783.1548 4762.6064 -3783.5945 4762.459 -3784.0825 4762.3174 C
-3784.7251 4762.0527 -3785.5005 4763.2837 -3786.5056 4763.5024 C
f
/BBAccumRotation (0.598766) XT
-3777.3716 4760.3101 m
-3777.5281 4760.4185 -3777.8442 4760.6333 Y
-3778.5471 4759.9424 -3779.2856 4760.2129 -3780.0239 4760.4824 C
-3779.9165 4760.6416 -3779.8071 4760.8022 -3779.6963 4760.9614 C
-3779.2739 4760.9063 -3779.2251 4760.6382 -3779.6001 4760.4287 C
-3778.7407 4761.0117 -3777.9282 4761.1016 -3777.0959 4761.0039 C
-3777.1479 4760.7432 -3777.1372 4760.4429 -3777.3716 4760.3101 C
f
/BBAccumRotation (0.598766) XT
-3776.6079 4760.9248 m
-3776.7712 4760.9561 -3776.9353 4760.9829 -3777.0959 4761.0039 C
-3777.0923 4761.0313 -3777.0845 4761.0581 -3777.0784 4761.0869 C
-3776.9143 4761.0391 -3776.7505 4760.9917 -3776.5903 4760.9478 C
-3776.5959 4760.9399 -3776.6021 4760.9326 -3776.6079 4760.9248 C
f
/BBAccumRotation (0.598766) XT
-3790.7097 4760.7549 m
-3792.8071 4760.7935 -3794.7815 4760.7471 -3796.7097 4760.6533 C
-3796.8579 4760.8408 -3796.9617 4761.0576 -3797.1609 4760.9453 C
-3797.3113 4760.7783 -3797.4631 4760.6729 -3797.6135 4760.603 C
-3797.8953 4760.5879 -3798.1765 4760.5713 -3798.4556 4760.5527 C
-3798.5532 4760.5742 -3798.6521 4760.6006 -3798.7524 4760.6279 C
-3798.7537 4760.6294 -3798.7583 4760.6309 -3798.7605 4760.6328 c
-3798.9185 4760.7417 -3798.8716 4760.8896 -3798.7739 4761.0313 C
-3798.6648 4761.1328 -3798.5647 4761.2524 -3798.4792 4761.3789 c
-3798.5337 4761.2983 -3798.6785 4761.1694 -3798.7739 4761.0313 C
-3798.9067 4760.9097 -3799.0544 4760.8135 -3799.2273 4760.7593 C
-3799.4839 4760.8188 -3799.7524 4760.8535 -3800.0295 4760.7974 C
-3799.7212 4760.6846 -3799.4556 4760.6846 -3799.2273 4760.7593 C
-3799.0647 4760.7207 -3798.9087 4760.6729 -3798.7524 4760.6279 C
-3798.7075 4760.5977 -3798.6624 4760.5713 -3798.6155 4760.541 C
-3799.2583 4760.5 -3799.8972 4760.4526 -3800.5369 4760.4038 C
-3800.6841 4760.4287 -3800.8247 4760.4502 -3800.9392 4760.4824 c
-3801.4028 4760.6108 -3801.8647 4760.7393 -3802.1509 4760.2734 C
-3802.2639 4760.2656 -3802.3792 4760.2559 -3802.4944 4760.2437 C
-3802.4731 4760.2734 -3802.4497 4760.2969 -3802.4282 4760.3301 C
-3802.4792 4760.3008 -3802.5222 4760.2695 -3802.5571 4760.2393 C
-3803.0396 4760.1997 -3803.5239 4760.1582 -3804.0105 4760.1157 C
-3804.3247 4760.2969 -3804.6487 4760.5239 -3804.9731 4760.6606 C
-3805.1919 4760.3413 -3805.2993 4760.1816 V
-3805.4312 4760.4214 -3805.6196 4760.5801 -3805.8403 4760.6606 C
-3805.5784 4760.9478 -3805.3403 4761.2646 -3805.1177 4761.4614 C
-3804.7915 4761.9414 -3804.3892 4760.498 -3804.0044 4761.4033 c
-3804.3892 4760.498 -3804.7915 4761.9414 -3805.1177 4761.4614 C
-3805.3403 4761.2646 -3805.5784 4760.9478 -3805.8403 4760.6606 C
-3806.2993 4760.832 -3806.8933 4760.6606 -3807.3716 4760.1929 C
-3806.7776 4759.7871 -3806.2776 4760.1797 -3805.8403 4760.6606 C
-3805.6196 4760.5801 -3805.4312 4760.4214 -3805.2993 4760.1816 C
-3805.1919 4760.3413 -3804.9731 4760.6606 Y
-3804.6487 4760.5239 -3804.3247 4760.2969 -3804.0105 4760.1157 C
-3804.9597 4760.0327 -3805.9185 4759.9502 -3806.8987 4759.8687 c
-3813.2031 4759.2568 -3819.0176 4759.3657 -3825.5583 4758.9141 c
-3829.1016 4758.6367 -3832.5056 4758.2256 -3835.8442 4757.6631 c
-3842.5022 4756.5439 -3848.5759 4757.8301 -3855.3025 4755.4077 c
-3857.8843 4754.5581 -3862.6763 4755.0181 -3865.1653 4755.1182 C
-3868.5 4756.7119 -3866.7712 4760.832 -3866.6145 4761.0645 C
-3864.5647 4764.5757 -3862.9607 4762.6265 -3858.7839 4764.6895 C
-3861.6289 4763.5176 -3856.6848 4762.4297 -3853.9983 4764.8354 c
-3850.1111 4768.5 -3844.5671 4765.5688 -3839.7712 4766.5063 c
-3838.5723 4766.7417 -3837.2983 4766.5757 -3835.8647 4766.6484 C
-3828.4336 4767.895 -3821.5295 4766.3433 -3813.7161 4766.6274 C
-3811.6453 4766.6167 -3809.8264 4765.7271 -3808.0825 4765.2393 C
-3806.8091 4765.0742 -3805.4482 4765.5454 -3804.4128 4765.5439 c
-3802.7849 4765.5356 -3801.3833 4765.1992 -3800.0415 4764.7769 C
-3801.5415 4764.9526 -3802.6372 4765.2104 -3804.3091 4765.355 c
-3805.4243 4765.4141 -3803.5337 4764.124 -3802.7952 4763.853 C
-3802.4792 4763.6382 -3801.9829 4764.7041 -3801.6665 4764.4878 C
-3800.9792 4764.4863 -3800.3479 4764.0557 -3799.6101 4763.7847 C
-3799.2937 4763.5703 -3799.3303 4764.5313 -3799.1724 4764.4248 C
-3798.1665 4764.207 -3797.3911 4762.9751 -3796.7483 4763.2383 C
-3796.2605 4763.3809 -3795.8201 4763.5293 -3795.3911 4763.6768 C
-3795.1196 4763.7295 -3794.8501 4763.7725 -3794.5632 4763.7349 C
-3794.3853 4763.6543 -3794.2007 4763.5742 -3794.0161 4763.4937 C
-3794.1624 4763.1997 -3794.2151 4762.8408 -3794.2639 4762.479 C
-3793.9983 4762.5313 -3793.6235 4762.7437 -3793.3579 4762.7969 c
-3793.6235 4762.7437 -3793.9983 4762.5313 -3794.2639 4762.479 C
-3794.2151 4762.8408 -3794.1624 4763.1997 -3794.0161 4763.4937 C
-3792.6919 4762.9302 -3791.1648 4762.4229 -3789.7449 4762.0093 C
-3789.7505 4761.9824 -3789.7583 4761.9526 -3789.7639 4761.9238 C
-3790.5945 4762.0215 -3791.4041 4761.9336 -3792.2661 4761.3496 C
-3791.8933 4761.5615 -3791.9392 4761.8281 -3792.3643 4761.8848 C
-3792.4731 4761.7256 -3792.5825 4761.5645 -3792.6899 4761.4053 C
-3791.9497 4761.1353 -3791.2112 4760.8638 -3790.5105 4761.5557 C
-3790.1936 4761.3408 -3790.0369 4761.2329 V
-3789.8025 4761.3657 -3789.8132 4761.667 -3789.7639 4761.9238 C
-3789.6021 4761.9063 -3789.4382 4761.8789 -3789.2739 4761.8477 C
-3789.6196 4761.3701 -3790.7097 4760.7549 Y
f
/BBAccumRotation (0.598766) XT
-3799.2463 4760.7314 m
-3799.1333 4760.6997 -3798.9944 4760.6782 -3798.8464 4760.6543 C
-3799.3833 4760.6118 -3799.9204 4760.5688 -3800.4597 4760.5239 C
-3800.1743 4760.9902 -3799.7112 4760.8608 -3799.2463 4760.7314 c
f
/BBAccumRotation (0.598766) XT
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3868.5 4768.4351 m
-3654.8999 4768.4351 L
-3654.8999 4760.6343 L
-3868.5 4760.6343 L
-3868.5 4768.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3868.5 4764.5352 m
-3858.4856 4767.0269 -3851.6863 4768.375 -3839.7007 4768.4351 c
-3826.7185 4768.5 -3761.6997 4768.4351 y
-3696.6816 4768.5 -3683.6997 4768.4351 v
-3671.7124 4768.375 -3664.9136 4767.0269 -3654.8999 4764.5352 C
-3664.9136 4762.0435 -3671.7124 4760.6953 -3683.6997 4760.6343 c
-3696.6816 4760.5688 -3761.6997 4760.6343 y
-3826.7185 4760.5688 -3839.7007 4760.6343 v
-3851.6863 4760.6953 -3858.4856 4762.0435 -3868.5 4764.5352 C
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 10 pt. Oval/ Adobe ArtOnPath B) -
(rush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/ Calligr) -
(aphy/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(10 pt. Oval)
(1 10 10 75 75 -20 110 1 0 1 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Calligraphy)
(1 / Unnamed 11/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.00882 0.992309 0.974029 0.001129 0.92549 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.037415 0.000031 0.938323 0.000031 1 0.945098 0 Xa
(CMYK Yellow)
Pc
0.830198 0.070466 0.955505 0.00293 0 0.647059 0.317647 Xa
(CMYK Green)
Pc
0.696681 0.145022 0.000031 0.000031 0 0.678431 0.933333 Xa
(CMYK Cyan)
Pc
0.9935 0.966247 0.040497 0.005554 0.180392 0.192157 0.568627 Xa
(CMYK Blue)
Pc
0.01062 0.992554 0.011963 0.000031 0.921569 0 0.545098 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000671 0.901213 0.849546 0.000031 0.933333 0.25098 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.00116 0.798733 0.949126 0.000244 0.941176 0.352941 0.156863 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.003662 0.505333 0.989288 0.000031 0.964706 0.572549 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.003021 0.35346 0.847349 0.000031 0.980392 0.686275 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.054444 0.003235 0.905974 0.000031 0.976471 0.92549 0.192157 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.20148 0.003815 0.989227 0.000031 0.839216 0.870588 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.505791 0.004547 0.994018 0.000031 0.545098 0.772549 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.754574 0.006806 0.99881 0.000214 0.215686 0.701961 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.86276 0.170748 1 0.035309 0 0.576471 0.270588 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.757656 0.005707 0.748348 0.000031 0.160784 0.705882 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.790921 0.110048 0.453498 0.001251 0 0.65098 0.611765 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.705592 0.159396 0.000092 0.000031 0.14902 0.662745 0.878431 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.851041 0.499489 0.004303 0.000031 0.105882 0.458824 0.733333 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.99588 0.93521 0.066804 0.005341 0.168627 0.219608 0.560784 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.305394 0.220737 0.14902 0.133333 0.380392 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.751614 0.986633 0.016571 0.002991 0.396078 0.176471 0.564706 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.513085 0.995178 0.021149 0.001465 0.564706 0.152941 0.556863 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.097017 0.997467 0.483467 0.004913 0.85098 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.005951 0.949981 0.201511 0.000031 0.92549 0.160784 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.25568 0.249699 0.402838 0.000031 0.756863 0.705882 0.603922 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.395941 0.446571 0.488045 0.063233 0.603922 0.517647 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.518273 0.513481 0.611536 0.231357 0.443137 0.396078 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.543633 0.603143 0.645685 0.397101 0.352941 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.236454 0.395239 0.642084 0.015473 0.764706 0.6 0.419608 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.307591 0.494209 0.757412 0.096529 0.658824 0.486275 0.309804 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.360388 0.604211 0.80734 0.241825 0.541176 0.364706 0.231373 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.391821 0.642573 0.894743 0.355108 0.458824 0.298039 0.156863 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.415381 0.699947 0.970245 0.491554 0.376471 0.219608 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.51931 0.703029 0.790982 0.698695 0.231373 0.137255 0.078431 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Fade To Edge) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade To Edge)
Pc
Bb
0 0 0 0 Bh
2 (Black and White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black and White Radial)
Pc
Bb
2 (Black and White Linear) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black and White Linear)
Pc
(Crosses Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Crosses Pattern)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.679255 0.611627 0.588037 0.462501 0.25098 0.25098 0.254902 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.581781 0.492103 0.470741 0.1514 0.427451 0.431373 0.439216 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.521477 0.431769 0.410437 0.065675 0.501961 0.505882 0.517647 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.454841 0.363958 0.351537 0.014527 0.572549 0.580392 0.592157 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.367559 0.287694 0.276036 0.000031 0.65098 0.658824 0.670588 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.268681 0.203189 0.199283 0.000031 0.733333 0.741176 0.74902 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.174166 0.123781 0.126894 0.000031 0.815686 0.823529 0.827451 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.039734 0.02884 0.023896 0.000031 0.945098 0.945098 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.089754 0.696376 0.798398 0.005768 0.870588 0.427451 0.270588 Xa
(C=10 M=70 Y=80 K=0)
Pc
0.095277 0.510216 0.801297 0.003082 0.882353 0.556863 0.294118 Xa
(C=10 M=50 Y=80 K=0)
Pc
0.649592 0.102907 1 0.004242 0.407843 0.67451 0.270588 Xa
(C=65 M=10 Y=100 K=0)
Pc
0.49482 0.897307 0.099397 0.004273 0.568627 0.247059 0.545098 Xa
(C=50 M=90 Y=10 K=0)
Pc
0.251102 0.845518 0.591363 0.103578 0.682353 0.270588 0.32549 Xa
(C=25 M=85 Y=60 K=10)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
u
1 Ap
0 O
0.779416 0.326177 0.009827 0.000031 0.113725 0.556863 0.8 Xa
0 J 0 j 1 w 4 M []0 d0 XR
368.75 612.5 m
331.25 612.5 L
331.25 575 L
368.75 575 L
368.75 612.5 L
f
0.853635 0.460426 0.126131 0.004059 0.098039 0.47451 0.678431 Xa
368.75 612.5 m
331.25 612.5 L
331.25 606.25 L
368.75 606.25 L
368.75 612.5 L
f
u
0 Ap
0.711543 0.000031 0.679103 0.000031 0.14902 0.760784 0.505882 Xa
665.002 504.0957 m
590.0039 633.999 L
588.3457 636.8691 584.6758 637.8516 581.8066 636.1943 C
321.999 486.1953 L
319.1299 484.5391 318.1465 480.8691 319.8027 477.999 C
394.8027 348.0947 L
396.459 345.2256 400.1309 344.2422 403 345.8994 C
662.8066 495.8984 L
665.6758 497.5547 666.6602 501.2256 665.002 504.0957 C
f
*u
1 D
0 R
0.000031 0.000031 0.000031 0.000031 1 1 1 XA
1 J 1 j 3 w531.0996 488.9463 m
523.1719 502.6641 506.668 508.4063 492.2324 503.333 C
477.4023 529.0146 L
483.2344 529.6924 489.1914 526.9424 492.3066 521.5459 c
493.9629 518.6768 497.6328 517.6924 500.502 519.3496 c
503.3711 521.0059 504.3535 524.6758 502.6973 527.5449 c
496.2402 538.7314 482.9746 543.5781 471.123 539.8994 C
469.6777 542.4053 L
468.0234 545.2754 464.3535 546.2617 461.4824 544.6055 c
461.4805 544.6035 l
458.6094 542.9482 457.627 539.2803 459.2813 536.4102 C
460.7266 533.9063 L
456.9824 530.4609 454.2793 526.0244 452.9277 520.9902 c
451.0488 513.9805 452.0117 506.6602 455.6387 500.375 c
462.0977 489.1895 475.3691 484.3418 487.2188 488.0186 C
507.5703 452.7744 L
499.043 450.8193 489.8652 454.5225 485.2676 462.4824 c
483.6113 465.3535 479.9414 466.335 477.0723 464.6787 c
474.2031 463.0225 473.2188 459.3525 474.877 456.4834 c
482.7988 442.7598 499.2988 437.0186 513.7344 442.0908 C
515.123 439.6836 L
516.7773 436.8125 520.4473 435.8271 523.3184 437.4824 c
523.3203 437.4834 523.3203 437.4834 523.3223 437.4844 c
526.1895 439.1406 527.1719 442.8076 525.5176 445.6777 C
524.127 448.0889 L
535.7441 458.0547 539.0254 475.2188 531.0996 488.9463 c
s
/BBAccumRotation (0.523598) XT
0 D
466.0313 506.377 m
464.0078 509.8848 463.4688 513.9697 464.5176 517.8828 c
465.0215 519.7695 465.875 521.501 467.0078 523.0205 C
480.9355 498.9014 L
475.1035 498.2246 469.1465 500.9785 466.0313 506.377 c
s
/BBAccumRotation (0.523598) XT
517.9629 458.7754 m
498.4023 492.6494 L
506.9297 494.6025 516.1094 490.9033 520.707 482.9434 c
525.3047 474.9805 523.9199 465.1836 517.9629 458.7754 C
s
/BBAccumRotation (0.523598) XT
*U
/BBAccumRotation (0.523598) XT
u
0 O
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 Xa
0 J 0 j 1 w579.1055 490.875 m
576.2363 489.2178 572.5645 490.2012 570.9102 493.0713 c
569.252 495.9404 570.2363 499.6104 573.1055 501.2666 c
588.1484 509.9521 593.3184 529.2549 584.6348 544.2979 c
575.9512 559.3398 556.6484 564.5117 541.6055 555.8262 c
538.7363 554.1709 535.0664 555.1523 533.4102 558.0234 c
531.7539 560.8926 532.7363 564.5625 535.6035 566.2197 c
556.377 578.2129 583.0332 571.0684 595.0273 550.2969 c
607.0195 529.5244 599.8789 502.8662 579.1055 490.875 C
579.1055 490.875 L
f
/BBAccumRotation (0.523598) XT
U
u
449.2021 415.875 m
428.4268 403.8809 401.7725 411.0234 389.7793 431.7969 c
377.7861 452.5703 384.9287 479.2266 405.7002 491.2188 c
408.5713 492.877 412.2402 491.8926 413.8965 489.0225 c
415.5537 486.1533 414.5703 482.4834 411.7002 480.8271 c
396.6582 472.1416 391.4863 452.8389 400.1709 437.7969 c
408.8574 422.7549 428.1592 417.582 443.2021 426.2676 c
446.0713 427.9238 449.7402 426.9414 451.3965 424.0693 c
453.0547 421.2021 452.0703 417.5322 449.2021 415.875 C
449.2021 415.875 L
f
/BBAccumRotation (0.523598) XT
U
u
u
411.7002 480.8271 m
379.2256 462.0771 L
376.3555 460.4199 372.6855 461.4033 371.0293 464.2715 c
369.3721 467.1416 370.3555 470.8125 373.2246 472.4688 C
405.7002 491.2188 L
408.5713 492.877 412.2402 491.8926 413.8965 489.0225 c
415.5537 486.1533 414.5703 482.4834 411.7002 480.8271 C
411.7002 480.8271 L
f
/BBAccumRotation (0.523598) XT
U
u
449.2021 415.875 m
416.7246 397.125 L
413.8555 395.4688 410.1855 396.4521 408.5293 399.3213 c
406.8711 402.1895 407.8555 405.8594 410.7246 407.5166 C
443.2021 426.2676 L
446.0713 427.9238 449.7402 426.9414 451.3965 424.0693 c
453.0547 421.2021 452.0703 417.5322 449.2021 415.875 C
449.2021 415.875 L
f
/BBAccumRotation (0.523598) XT
U
U
u
u
574.082 574.5781 m
541.6055 555.8262 L
538.7363 554.1709 535.0664 555.1523 533.4102 558.0234 c
531.7539 560.8926 532.7363 564.5625 535.6035 566.2197 C
568.0801 584.9688 L
570.9512 586.626 574.6211 585.6426 576.2773 582.7734 c
577.9336 579.9023 576.9512 576.2334 574.082 574.5781 C
574.082 574.5781 L
f
/BBAccumRotation (0.523598) XT
U
u
611.582 509.626 m
579.1055 490.875 L
576.2363 489.2178 572.5645 490.2012 570.9102 493.0713 c
569.252 495.9404 570.2363 499.6104 573.1055 501.2666 C
605.582 520.0176 L
608.4512 521.6738 612.1211 520.6904 613.7773 517.8223 c
615.4336 514.9512 614.4512 511.2822 611.582 509.626 C
611.582 509.626 L
f
/BBAccumRotation (0.523598) XT
U
U
1 D
0 R
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 XA
1 J 1 j 3 w [26 12 0 12 163 0 ]0 d402.1953 359.291 m
651.6113 503.291 L
582.6113 622.8027 L
333.1953 478.8027 L
402.1953 359.291 L
402.1953 359.291 L
s
/BBAccumRotation (0.523598) XT
U
u
0 D
0 O
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 Xa
0 J 0 j 1 w []0 d759.3945 402.8096 m
720.5723 547.6973 L
719.7148 550.8994 716.4258 552.7979 713.2246 551.9395 C
423.4473 474.2959 L
420.2461 473.4385 418.3457 470.1475 419.2031 466.9463 C
458.0273 322.0566 L
458.8848 318.8574 462.1758 316.959 465.375 317.8145 C
755.1543 395.4609 L
758.3535 396.3184 760.2539 399.6084 759.3945 402.8096 C
f
*u
1 D
0 R
0.711543 0.000031 0.679103 0.000031 0.14902 0.760784 0.505882 XA
1 J 1 j 3 w626.1348 422.832 m
622.0273 438.1367 607.5723 447.9521 592.3145 446.791 C
584.6387 475.4336 L
590.4453 474.5791 595.4863 470.3809 597.0996 464.3633 c
597.957 461.1611 601.2461 459.2627 604.4492 460.1191 c
607.6484 460.9766 609.5488 464.2686 608.6895 467.4678 c
605.3477 479.9434 593.7871 488.0596 581.3906 487.5723 C
580.6406 490.3682 L
579.7852 493.5693 576.4961 495.4697 573.293 494.6162 c
573.293 494.6143 573.291 494.6133 y
570.0918 493.7559 568.1934 490.4678 569.0488 487.2686 C
569.7969 484.4756 L
565.2871 482.1152 561.5254 478.5303 558.9199 474.0166 c
555.2891 467.7334 554.3242 460.4131 556.2031 453.4023 c
559.5469 440.9268 571.1094 432.8076 583.5078 433.293 C
594.043 393.9844 L
585.3008 394.3037 577.3945 400.252 575.0156 409.1338 c
574.1582 412.335 570.8672 414.2334 567.668 413.376 c
564.4648 412.5176 562.5664 409.2266 563.4238 406.0273 c
567.5273 390.7227 581.9766 380.9043 597.2344 382.0684 C
597.9512 379.3828 L
598.8086 376.1807 602.0977 374.2803 605.2988 375.1367 c
605.3008 375.1387 l
608.5 375.9961 610.4004 379.2832 609.5449 382.4844 C
608.8242 385.1738 L
622.625 391.793 630.2363 407.5225 626.1348 422.832 c
s
/BBAccumRotation (0.261799) XT
0 D
567.7949 456.5098 m
566.748 460.4209 567.2852 464.5088 569.3086 468.0176 c
570.2871 469.709 571.5586 471.1592 573.0449 472.335 C
580.2539 445.4326 L
574.4473 446.2891 569.4082 450.4893 567.7949 456.5098 c
s
/BBAccumRotation (0.261799) XT
605.6348 397.0898 m
595.5078 434.874 L
604.252 434.5537 612.1602 428.6025 614.543 419.7246 c
616.9219 410.8438 613.0488 401.7383 605.6348 397.0898 C
s
/BBAccumRotation (0.261799) XT
*U
/BBAccumRotation (0.261799) XT
u
0 O
0.87274 0.291722 0.722835 0.140352 0.011765 0.482353 0.372549 Xa
0 J 0 j 1 w673.002 412.2695 m
669.8027 411.4131 666.5117 413.3145 665.6543 416.5137 c
664.7969 419.7139 666.6973 423.0049 669.8965 423.8623 c
686.6738 428.3584 696.668 445.665 692.1719 462.4424 c
687.6758 479.2197 670.3691 489.2119 653.5918 484.7168 c
650.3926 483.8584 647.1016 485.7578 646.2441 488.958 c
645.3848 492.1592 647.2871 495.4482 650.4863 496.3066 c
673.6543 502.5146 697.5547 488.7168 703.7637 465.5479 c
709.9707 442.3789 696.1719 418.4805 673.002 412.2695 C
673.002 412.2695 L
f
/BBAccumRotation (0.261799) XT
U
u
528.1133 373.4482 m
504.9453 367.2412 481.0449 381.0391 474.8379 404.207 c
468.6289 427.376 482.4277 451.2764 505.5957 457.4844 c
508.7988 458.3418 512.0879 456.4424 512.9453 453.2422 c
513.8027 450.041 511.9043 446.751 508.7031 445.8926 c
491.9258 441.3984 481.9336 424.0908 486.4277 407.3135 c
490.9238 390.5352 508.2305 380.543 525.0078 385.04 c
528.209 385.8975 531.5 383.998 532.3574 380.7969 c
533.2129 377.5967 531.3145 374.3066 528.1133 373.4482 C
528.1133 373.4482 L
f
/BBAccumRotation (0.261799) XT
U
u
u
508.7031 445.8926 m
472.4805 436.1885 L
469.2813 435.3301 465.9883 437.2295 465.1328 440.4287 c
464.2734 443.6299 466.1738 446.9199 469.375 447.7783 C
505.5957 457.4844 L
508.7988 458.3418 512.0879 456.4424 512.9453 453.2422 c
513.8027 450.041 511.9043 446.751 508.7031 445.8926 C
508.7031 445.8926 L
f
/BBAccumRotation (0.261799) XT
U
u
528.1133 373.4482 m
491.8926 363.7422 L
488.6914 362.8848 485.4004 364.7842 484.543 367.9854 c
483.6855 371.1855 485.5859 374.4756 488.7871 375.334 C
525.0078 385.04 L
528.209 385.8975 531.5 383.998 532.3574 380.7969 c
533.2129 377.5967 531.3145 374.3066 528.1133 373.4482 C
528.1133 373.4482 L
f
/BBAccumRotation (0.261799) XT
U
U
u
u
689.8145 494.4219 m
653.5918 484.7168 L
650.3926 483.8584 647.1016 485.7578 646.2441 488.958 c
645.3848 492.1592 647.2871 495.4482 650.4863 496.3066 C
686.709 506.0127 L
689.9102 506.8701 693.1992 504.9707 694.0566 501.7705 c
694.9141 498.5693 693.0137 495.2793 689.8145 494.4219 C
689.8145 494.4219 L
f
/BBAccumRotation (0.261799) XT
U
u
709.2266 421.9775 m
673.002 412.2695 L
669.8027 411.4131 666.5117 413.3145 665.6543 416.5137 c
664.7969 419.7139 666.6973 423.0049 669.8965 423.8623 C
706.1191 433.5684 L
709.3203 434.4258 712.6094 432.5254 713.4668 429.3252 c
714.3262 426.125 712.4258 422.834 709.2266 421.9775 C
709.2266 421.9775 L
f
/BBAccumRotation (0.261799) XT
U
U
1 D
0 R
0.870054 0.284703 0.71667 0.129854 0.011765 0.490196 0.380392 XA
1 J 1 j 3 w [26 12 0 12 163 0 ]0 d468.0645 330.959 m
746.252 405.499 L
710.5352 538.7959 L
432.3477 464.2568 L
468.0645 330.959 L
468.0645 330.959 L
s
/BBAccumRotation (0.261799) XT
U
u
0 D
0 O
0.87274 0.291722 0.722835 0.140352 0.011765 0.482353 0.372549 Xa
0 J 0 j 1 w []0 d721.7188 400.4785 m
731 402.9658 L
731 418.499 L
731 421.8135 728.3125 424.499 725 424.499 C
715 424.499 L
715 384.7012 L
731 388.9893 L
731 399.8594 L
722.4902 397.5791 L
722.3594 397.5488 722.2285 397.5293 722.0996 397.5293 c
721.4297 397.5293 720.8301 397.9893 720.6484 398.6387 C
720.6484 398.6387 L
720.4395 399.4395 720.9199 400.2598 721.7188 400.4785 C
f
0.846738 0.70193 0.528099 0.539208 0.129412 0.184314 0.235294 Xa
721.7188 400.4785 m
720.9199 400.2598 720.4395 399.4395 720.6484 398.6387 C
720.6484 398.6387 L
720.8301 397.9893 721.4297 397.5293 722.0996 397.5293 c
722.2285 397.5293 722.3594 397.5488 722.4902 397.5791 C
731 399.8594 L
731 401.4121 L
731 402.9658 L
721.7188 400.4785 L
f
U
u
0.711543 0.000031 0.679103 0.000031 0.14902 0.760784 0.505882 Xa
712.5 424.499 m
412.5 424.499 L
409.1875 424.499 406.5 421.8135 406.5 418.499 C
406.5 268.5 L
406.5 265.1865 409.1875 262.499 412.5 262.5 C
712.5 262.5 L
715.8125 262.499 718.5 265.1865 718.5 268.5 C
718.5 418.499 L
718.5 421.8135 715.8125 424.499 712.5 424.499 C
f
*u
1 D
0 R
0.000031 0.000031 0.000031 0.000031 1 1 1 XA
1 J 1 j 3 w594.9609 322.3311 m
594.9551 338.1768 583.5332 351.4004 568.4941 354.2266 C
568.4941 383.8809 L
573.8828 381.5508 577.666 376.1914 577.6641 369.96 c
577.6641 366.6475 580.3516 363.9609 583.6641 363.96 c
586.9785 363.9609 589.6641 366.6475 589.6641 369.96 c
589.6641 382.877 580.5977 393.707 568.4961 396.4463 C
568.498 399.3408 L
568.5 402.6543 565.8145 405.3418 562.5 405.3438 c
562.498 405.3438 l
559.1855 405.3438 556.5 402.6582 556.498 399.3457 C
556.498 396.4551 L
551.5332 395.3418 546.9707 392.8535 543.2832 389.168 c
538.1523 384.0381 535.3262 377.2168 535.3262 369.9609 c
535.3262 357.043 544.3926 346.208 556.4961 343.4678 C
556.498 302.7725 L
548.1367 305.3428 542.0391 313.1367 542.0391 322.3301 c
542.0391 325.6436 539.3516 328.3301 536.0391 328.3291 c
532.7246 328.3291 530.0391 325.6426 530.0391 322.3301 c
530.0391 306.4834 541.457 293.2617 556.4941 290.4365 C
556.4941 287.6563 L
556.4922 284.3428 559.1777 281.6553 562.4902 281.6543 c
562.4922 281.6533 562.4922 281.6543 562.4941 281.6533 c
565.8066 281.6533 568.4922 284.3379 568.4941 287.6504 C
568.4941 290.4346 L
583.5391 293.2568 594.9609 306.4824 594.9609 322.3311 c
s
0 D
547.3262 369.96 m
547.3262 374.0107 548.9023 377.8184 551.7676 380.6836 c
553.1484 382.0645 554.7539 383.1377 556.4941 383.8867 C
556.4941 356.0352 L
551.1074 358.3652 547.3262 363.7285 547.3262 369.96 c
s
568.498 302.7715 m
568.4961 341.8887 L
576.8594 339.3164 582.957 331.5225 582.9609 322.3291 c
582.9609 313.1348 576.8613 305.3428 568.498 302.7715 C
s
*U
u
0 O
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 Xa
0 J 0 j 1 w637.5 299.999 m
634.1855 299.999 631.5 302.6855 631.5 306 c
631.5 309.3135 634.1855 311.999 637.5 311.999 c
654.8691 311.999 668.998 326.1309 669 343.499 c
669 360.8691 654.8691 374.999 637.5 374.999 c
634.1855 375 631.5 377.6865 631.5 381 c
631.5 384.3135 634.1855 386.999 637.5 387 c
661.4863 387 681 367.4854 681 343.5 c
681 319.5137 661.4863 299.999 637.5 299.999 C
637.5 299.999 L
f
U
u
487.5 299.998 m
463.5117 299.999 444 319.5137 444 343.499 c
444 367.4854 463.5137 387 487.5 387 c
490.8145 386.999 493.5 384.3125 493.5 380.999 c
493.5 377.6855 490.8125 375 487.5 375 c
470.1309 375 456 360.8691 456 343.5 c
456 326.1299 470.1309 311.999 487.5 311.999 c
490.8125 311.999 493.5 309.3135 493.5 305.999 c
493.498 302.6855 490.8145 300 487.5 299.998 C
487.5 299.998 L
f
U
u
u
487.5 375 m
450 375 L
446.6875 375 444 377.6855 444 380.999 c
444 384.3135 446.6855 386.999 450 386.999 C
487.5 387 L
490.8145 386.999 493.5 384.3125 493.5 380.999 c
493.5 377.6855 490.8125 375 487.5 375 C
487.5 375 L
f
U
u
487.5 299.998 m
450 300 L
446.6855 300 444 302.6865 444 305.999 c
444 309.3135 446.6855 311.999 450 312 C
487.5 311.999 L
490.8125 311.999 493.5 309.3135 493.5 305.999 c
493.498 302.6855 490.8145 300 487.5 299.998 C
487.5 299.998 L
f
U
U
u
u
675 375 m
637.5 374.999 L
634.1855 375 631.5 377.6865 631.5 381 c
631.5 384.3135 634.1855 386.999 637.5 387 C
675 386.999 L
678.3125 386.999 681 384.3135 681 380.999 c
681 377.6865 678.3145 374.999 675 375 C
675 375 L
f
U
u
675 300 m
637.5 299.999 L
634.1855 299.999 631.5 302.6855 631.5 306 c
631.5 309.3135 634.1855 311.999 637.5 311.999 C
675 311.999 L
678.3125 311.999 681 309.3135 681 306 c
681 302.6855 678.3125 300 675 300 C
675 300 L
f
U
U
1 D
0 R
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 XA
1 J 1 j 3 w [26 12 0 12 163 0 ]0 d418.5 274.499 m
706.5 274.5 L
706.5 412.499 L
418.5 412.5 L
418.5 274.499 L
418.5 274.499 L
s
U
1 Ap
0 D
0 O
0.681727 0.207279 0.000031 0.000031 0.133333 0.654902 0.941176 Xa
0 J 0 j 1 w []0 d187.5 425 m
187.5 514.7461 260.2539 587.5 350 587.5 c
439.7461 587.5 512.5 514.7461 512.5 425 c
512.5 335.2539 439.7461 262.5 350 262.5 c
260.2539 262.5 187.5 335.2539 187.5 425 c
f
0.779416 0.326177 0.009827 0.000031 0.113725 0.556863 0.8 Xa
212.5 425 m
212.5 500.9395 274.0605 562.5 350 562.5 c
425.9395 562.5 487.5 500.9395 487.5 425 c
487.5 349.0605 425.9395 287.5 350 287.5 c
274.0605 287.5 212.5 349.0605 212.5 425 c
f
0.681727 0.207279 0.000031 0.000031 0.133333 0.654902 0.941176 Xa
400 637.5 m
300 637.5 L
300 612.5 L
400 612.5 L
400 637.5 L
f
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
225 425 m
225 494.0361 280.9639 550 350 550 c
419.0361 550 475 494.0361 475 425 c
475 355.9648 419.0361 300 350 300 c
280.9639 300 225 355.9648 225 425 c
f
0.059724 0.035767 0.031525 0.000031 0.92549 0.933333 0.941176 Xa
237.5 425 m
237.5 487.1328 287.8672 537.5 350 537.5 c
412.1328 537.5 462.5 487.1328 462.5 425 c
462.5 362.8682 412.1328 312.5 350 312.5 c
287.8672 312.5 237.5 362.8682 237.5 425 c
f
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
250 425 m
250 480.2285 294.7715 525 350 525 c
405.2285 525 450 480.2285 450 425 c
450 369.7715 405.2285 325 350 325 c
294.7715 325 250 369.7715 250 425 c
f
u
u
0 Ap
0 R
0.257939 0.174929 0.166201 0.000031 0.741176 0.764706 0.780392 XA
3 w350 537.5 m
350 512.5 L
S
350 537.5 m
350 525 L
S
U
293.75 522.4277 m
300 511.6025 L
S
/BBAccumRotation (0.523599) XT
252.5723 481.25 m
263.3975 475 L
S
/BBAccumRotation (1.047198) XT
u
237.5 425 m
262.5 425 L
S
/BBAccumRotation (1.570797) XT
237.5 425 m
250 425 L
S
/BBAccumRotation (1.570797) XT
U
252.5723 368.75 m
263.3975 375 L
S
/BBAccumRotation (2.094396) XT
293.75 327.5723 m
300 338.3975 L
S
/BBAccumRotation (2.617995) XT
u
350 312.5 m
350 337.5 L
S
/BBAccumRotation (3.141594) XT
350 312.5 m
350 325 L
S
/BBAccumRotation (3.141594) XT
U
406.25 327.5723 m
400 338.3975 L
S
/BBAccumRotation (3.665193) XT
447.4277 368.75 m
436.6025 375 L
S
/BBAccumRotation (4.188792) XT
u
462.5 425 m
437.5 425 L
S
/BBAccumRotation (4.712391) XT
462.5 425 m
450 425 L
S
/BBAccumRotation (4.712391) XT
U
447.4277 481.25 m
436.6025 475 L
S
/BBAccumRotation (5.235990) XT
406.25 522.4277 m
400 511.6025 L
S
/BBAccumRotation (5.759589) XT
U
u
1 Ap
0 O
0.684565 0.510399 0.380102 0.118227 0.356863 0.423529 0.490196 Xa
1 w343.75 487.5 m
356.25 500 L
356.25 418.75 L
343.75 418.75 L
343.75 487.5 L
f
406.25 418.75 m
350 418.75 L
350 431.25 L
393.75 431.25 L
406.25 418.75 L
f
U
u
0 Ap
0 R
0.779416 0.326177 0.009827 0.000031 0.113725 0.556863 0.8 XA
3 w300 612.5 m
300 637.5 L
S
306.25 612.5 m
306.25 637.5 L
S
312.5 612.5 m
312.5 637.5 L
S
318.75 612.5 m
318.75 637.5 L
S
325 612.5 m
325 637.5 L
S
331.25 612.5 m
331.25 637.5 L
S
337.5 612.5 m
337.5 637.5 L
S
343.75 612.5 m
343.75 637.5 L
S
350 612.5 m
350 637.5 L
S
356.25 612.5 m
356.25 637.5 L
S
362.5 612.5 m
362.5 637.5 L
S
368.75 612.5 m
368.75 637.5 L
S
375 612.5 m
375 637.5 L
S
381.25 612.5 m
381.25 637.5 L
S
387.5 612.5 m
387.5 637.5 L
S
393.75 612.5 m
393.75 637.5 L
S
400 612.5 m
400 637.5 L
S
U
u
u
0 O
0.87274 0.291722 0.722835 0.140352 0.011765 0.482353 0.372549 Xa
1 w721.7246 400.4785 m
731.0059 402.9658 L
731.0059 418.499 L
731.0059 421.8135 728.3184 424.499 725.0059 424.499 C
715.0059 424.499 L
715.0059 423.9482 L
717.0693 423 718.5059 420.9199 718.5059 418.499 C
718.5059 385.6396 L
731.0059 388.9893 L
731.0059 399.8594 L
722.4961 397.5791 L
722.3652 397.5488 722.2344 397.5293 722.1055 397.5293 c
721.4355 397.5293 720.8359 397.9893 720.6543 398.6387 c
720.4453 399.4395 720.9258 400.2598 721.7246 400.4785 C
f
0.891173 0.351415 0.74432 0.242985 0.011765 0.411765 0.317647 Xa
721.7246 400.4785 m
720.9258 400.2598 720.4453 399.4395 720.6543 398.6387 C
720.6543 398.6387 L
720.8359 397.9893 721.4355 397.5293 722.1055 397.5293 c
722.2344 397.5293 722.3652 397.5488 722.4961 397.5791 C
731.0059 399.8594 L
731.0059 401.4121 L
731.0059 402.9658 L
721.7246 400.4785 L
f
U
u
0.797147 0.093202 0.755642 0.005219 0.12549 0.647059 0.431373 Xa
502.9414 503.6563 m
499.583 503.6563 496.2793 503.1006 493.1094 502.0313 C
494.5234 499.4092 495.877 496.748 497.1484 494.042 C
508.209 497.0059 L
507.1064 499.2314 505.9561 501.4297 504.7559 503.5967 C
504.1533 503.6328 503.5488 503.6563 502.9414 503.6563 c
f
477.7441 525.4336 m
476.1094 528.2646 L
475.8564 528.7012 475.8408 529.2363 476.0684 529.6885 c
476.2949 530.1396 476.7334 530.4463 477.2354 530.5039 c
477.8701 530.5781 478.5176 530.6152 479.1582 530.6152 c
482.4414 530.6152 485.5967 529.6416 488.2646 527.9102 C
484.9453 531.9619 481.4355 535.8496 477.7471 539.5605 C
475.6504 539.4463 473.5791 539.0889 471.5732 538.4668 c
470.9033 538.2598 470.1787 538.5439 469.8291 539.1504 C
468.3838 541.6563 L
467.583 543.0459 466.0869 543.9092 464.4805 543.9092 c
463.71 543.9092 462.9463 543.707 462.2705 543.3242 c
462.2588 543.3184 462.2471 543.3105 462.2354 543.3047 c
462.0615 543.2041 461.9131 543.0801 461.7578 542.9609 C
467.502 537.5186 472.8428 531.6572 477.7441 525.4336 C
f
459.5244 545.0293 m
459.8809 545.3438 460.2705 545.6309 460.6963 545.8789 C
460.71 545.8887 460.7246 545.8965 460.7383 545.9043 c
461.8779 546.5625 463.1719 546.9092 464.4805 546.9092 c
467.1563 546.9092 469.6484 545.4707 470.9834 543.1543 C
471.8428 541.6641 L
472.8701 541.9365 473.9131 542.1387 474.9639 542.2949 C
471.3027 545.8047 467.4775 549.1426 463.502 552.3008 C
456.1328 548.0469 L
457.2793 547.0586 458.4072 546.0498 459.5244 545.0293 C
f
491.0137 520.7959 m
488.7188 524.7715 484.5361 527.3232 479.9619 527.5918 C
492.9268 505.1406 L
496.167 506.1465 499.5303 506.6563 502.9414 506.6563 c
502.9688 506.6563 502.9951 506.6533 503.0225 506.6533 C
500.9336 510.2402 498.709 513.7383 496.3604 517.1445 C
494.1396 517.4922 492.1533 518.8203 491.0137 520.7959 c
f
460.9453 554.2871 m
457.8848 556.6211 454.7373 558.8486 451.5107 560.9648 C
444.7139 557.041 L
447.791 554.8311 450.7871 552.5166 453.6973 550.1016 C
460.9453 554.2871 L
f
0.617487 0.000031 0.54641 0.000031 0.309804 0.807843 0.6 Xa
479.1582 530.6152 m
478.5176 530.6152 477.8701 530.5781 477.2354 530.5039 c
476.7334 530.4463 476.2949 530.1396 476.0684 529.6885 c
475.8408 529.2363 475.8564 528.7012 476.1094 528.2646 C
477.7441 525.4336 L
483.5078 518.1133 488.6543 510.2881 493.1094 502.0313 C
496.2793 503.1006 499.583 503.6563 502.9414 503.6563 c
503.5488 503.6563 504.1533 503.6328 504.7559 503.5967 C
504.1885 504.6221 503.6113 505.6416 503.0225 506.6533 C
502.9951 506.6533 502.9688 506.6563 502.9414 506.6563 c
499.5303 506.6563 496.167 506.1465 492.9268 505.1406 C
479.9619 527.5918 L
484.5361 527.3232 488.7188 524.7715 491.0137 520.7959 c
492.1533 518.8203 494.1396 517.4922 496.3604 517.1445 C
493.8066 520.8457 491.1084 524.4395 488.2646 527.9102 C
485.5967 529.6416 482.4414 530.6152 479.1582 530.6152 c
f
470.9834 543.1543 m
469.6484 545.4707 467.1563 546.9092 464.4805 546.9092 c
463.1719 546.9092 461.8779 546.5625 460.7383 545.9043 c
460.7246 545.8965 460.71 545.8887 460.6963 545.8789 C
460.2705 545.6309 459.8809 545.3438 459.5244 545.0293 C
460.2744 544.3457 461.0215 543.6582 461.7578 542.9609 C
461.9131 543.0801 462.0615 543.2041 462.2354 543.3047 c
462.2471 543.3105 462.2588 543.3184 462.2705 543.3242 c
462.9463 543.707 463.71 543.9092 464.4805 543.9092 c
466.0869 543.9092 467.583 543.0459 468.3838 541.6563 C
469.8291 539.1504 L
470.1787 538.5439 470.9033 538.2598 471.5732 538.4668 c
473.5791 539.0889 475.6504 539.4463 477.7471 539.5605 C
476.8301 540.4824 475.9023 541.3945 474.9639 542.2949 C
473.9131 542.1387 472.8701 541.9365 471.8428 541.6641 C
470.9834 543.1543 L
f
0.870054 0.284703 0.71667 0.129854 0.011765 0.490196 0.380392 Xa
463.502 552.3008 m
462.6572 552.9717 461.8037 553.6328 460.9453 554.2871 C
453.6973 550.1016 L
454.5156 549.4238 455.3291 548.7412 456.1328 548.0469 C
463.502 552.3008 L
f
0.87274 0.291722 0.722835 0.140352 0.011765 0.482353 0.372549 Xa
513.7598 484.5186 m
502.4092 481.4775 L
505.3008 473.6777 507.6191 465.5996 509.2949 457.2881 C
511.0293 456.624 512.4336 455.1729 512.9512 453.2422 c
513.5742 450.9141 512.7363 448.5449 511.0039 447.0918 C
511.9863 439.8672 512.5059 432.4941 512.5059 425 c
512.5059 424.832 512.5 424.666 512.5 424.499 C
525 424.499 L
525 424.666 525.0059 424.832 525.0059 425 c
525.0059 446.0098 521.0176 466.0869 513.7598 484.5186 C
f
0.841031 0.19028 0.68304 0.034699 0.015686 0.576471 0.447059 Xa
501.3359 484.2969 m
512.6172 487.3193 L
511.252 490.6045 509.7793 493.833 508.209 497.0059 C
497.1484 494.042 L
498.6494 490.8496 500.042 487.5977 501.3359 484.2969 C
f
0.891173 0.351415 0.74432 0.242985 0.011765 0.411765 0.317647 Xa
512.9512 453.2422 m
512.4336 455.1729 511.0293 456.624 509.2949 457.2881 C
509.9727 453.9268 510.5371 450.5254 511.0039 447.0918 C
512.7363 448.5449 513.5742 450.9141 512.9512 453.2422 c
f
502.4092 481.4775 m
513.7598 484.5186 L
513.3896 485.457 513.0039 486.3887 512.6172 487.3193 C
501.3359 484.2969 L
501.7031 483.3613 502.0596 482.4209 502.4092 481.4775 C
f
0.797147 0.093202 0.755642 0.005219 0.12549 0.647059 0.431373 Xa
420.0059 278.3291 m
420.0059 276 L
427.4268 276 L
441.5557 282.165 454.6387 290.2734 466.334 299.999 C
453.8193 300 L
443.541 291.4561 432.1943 284.1553 420.0059 278.3291 C
f
480.1299 312.8799 m
504.917 338.876 521.1631 373.082 524.3994 411 C
511.8984 411 L
508.8154 374.875 493.916 342.1289 471.0781 316.6338 C
473.8428 314.9365 476.8906 313.6602 480.1299 312.8799 C
f
418.5059 273 m
418.4756 273 L
418.2061 273.0098 417.9463 273.0801 417.7354 273.21 c
417.4658 273.3799 417.2764 273.6006 417.1455 273.8604 C
417.1455 273.8701 417.1357 273.9004 417.1162 273.9404 C
417.1162 273.9307 L
417.0361 274.1299 417.0059 274.3105 417.0059 274.5 C
417.0059 276.9277 L
413.5674 275.3691 410.0674 273.9258 406.5059 272.6055 C
406.5059 268.5332 L
411.1113 269.8252 415.6309 271.3213 420.0615 273 C
418.5059 273 L
f
512.1289 414 m
524.627 414 L
524.8594 417.4717 524.9893 420.9707 525 424.499 C
512.5 424.499 L
512.4893 420.9717 512.3613 417.4717 512.1289 414 C
f
0.870054 0.284703 0.71667 0.129854 0.011765 0.490196 0.380392 Xa
466.7725 312 m
479.2695 311.999 L
479.5547 312.2939 479.8467 312.583 480.1299 312.8799 C
476.8906 313.6602 473.8428 314.9365 471.0781 316.6338 C
469.6709 315.0635 468.2393 313.5146 466.7725 312 C
f
479.2695 311.999 m
466.7725 312 L
462.6777 307.7695 458.3506 303.7666 453.8193 300 C
466.334 299.999 L
470.8613 303.7637 475.1777 307.7715 479.2695 311.999 C
f
420.0059 276 m
420.0059 278.3291 L
419.0107 277.8535 418.0127 277.3838 417.0059 276.9277 C
417.0059 274.5 L
417.0059 274.3105 417.0361 274.1299 417.1162 273.9307 C
417.1162 273.9404 L
417.1357 273.9004 417.1455 273.8701 417.1455 273.8604 C
417.2764 273.6006 417.4658 273.3799 417.7354 273.21 c
417.9463 273.0801 418.2061 273.0098 418.4756 273 C
418.5059 273 L
420.0615 273 L
422.5459 273.9414 425.001 274.9414 427.4268 276 C
420.0059 276 L
f
511.8984 411 m
524.3994 411 L
524.4844 411.998 524.5605 412.9971 524.627 414 C
512.1289 414 L
512.0615 412.9971 511.9844 411.998 511.8984 411 C
f
U
U
0 R
0.759853 0.586511 0.412177 0.201724 0.278431 0.352941 0.427451 XA
1 J 1 j 3 w211.5 262.5 m
762.5 262.5 L
S
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
